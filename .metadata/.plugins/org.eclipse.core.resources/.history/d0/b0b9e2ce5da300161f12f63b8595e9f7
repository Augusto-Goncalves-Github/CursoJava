package com.dextraining.investimento;

import java.text.MessageFormat;
import java.util.List;

import javax.persistence.EntityManager;
import javax.persistence.Query;
import javax.persistence.TypedQuery;

import com.dextraining.banco.Banco;
import com.dextraining.exception.ValidacaoException;
import com.dextraining.jpa.EntityManagerUtil;
import com.dextraining.service.GenericService;

public class InvestimentoService extends GenericService<Investimento>{

	public InvestimentoService() {
		super(Investimento.class);
	}
	
	@Override
	public void salvar(Investimento investimento){
		if (investimento.getDescricao() == null || investimento.getDescricao().isEmpty()) {
			throw new ValidacaoException("Descrição não pode estar vazia");
		}		
		if (investimento.getValor() == null || investimento.getValor() <= 0 ) {
			throw new ValidacaoException("Valor inválido");
		}		
		if (investimento.getRendimentoMensal() == null || investimento.getRendimentoMensal() <= 0 ) {
			throw new ValidacaoException("Rendimento inválido");
		}		
		super.salvar(investimento);
	}
	
	public List<Investimento> buscarTodosDesc(){
		EntityManager em = EntityManagerUtil.criarEntityManager();
		try{
			String jpql = "";
			jpql += "SELECT i FROM Investimento i";
			jpql += "ORDER BY i.valor DESC";
			
			Query query = em.createQuery(jpql);
			
			return query.getResultList();
		} finally {
			em.close();
		}		
	}
	
	public List<Investimento> buscarTodosMaiorMil(){
		EntityManager em = EntityManagerUtil.criarEntityManager();
		try{
			String jpql = "";
			jpql += "SELECT i FROM Investimento i";
			jpql += "WHERE i.valor >= 1000";
			jpql += "      AND i.rendimentoMensal > 0.25";
			
			Query query = em.createQuery(jpql);
			
			return query.getResultList();
		} finally {
			em.close();
		}		
	}
	
	public List<Investimento> buscarTodosTrecho(){
		EntityManager em = EntityManagerUtil.criarEntityManager();
		try{
			String jpql = "";
			jpql += "SELECT i FROM Investimento i";
			jpql += "WHERE i.descricao LIKE 'Selic'";
			
			Query query = em.createQuery(jpql);
			
			return query.getResultList();
		} finally {
			em.close();
		}		
	}
}
